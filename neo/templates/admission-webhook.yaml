---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: webhook-cert-sa
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ template "neo-helm-chart.name" . }}
    helm.sh/chart: {{ template "neo-helm-chart.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "1"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: webhook-cert-role-create
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ template "neo-helm-chart.name" . }}
    helm.sh/chart: {{ template "neo-helm-chart.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "2"
rules:
  - verbs:
      - create
      - get
    apiGroups:
      - ""
    resources:
      - secrets
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: webhook-cert-role-binding-create
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ template "neo-helm-chart.name" . }}
    helm.sh/chart: {{ template "neo-helm-chart.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/version: {{ .Chart.Version }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "3"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: webhook-cert-role-create
subjects:
  - kind: ServiceAccount
    name: webhook-cert-sa
    namespace: {{ .Release.Namespace }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: webhook-cert-cluster-role-patch
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ template "neo-helm-chart.name" . }}
    helm.sh/chart: {{ template "neo-helm-chart.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "4"
rules:
  - verbs:
      - get
      - update
    resources:
      - mutatingwebhookconfigurations
    apiGroups:
      - admissionregistration.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: webhook-cert-cluster-role-binding-patch
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ template "neo-helm-chart.name" . }}
    helm.sh/chart: {{ template "neo-helm-chart.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/version: {{ .Chart.Version }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "5"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: webhook-cert-cluster-role-patch
subjects:
  - kind: ServiceAccount
    name: webhook-cert-sa
    namespace: {{ .Release.Namespace }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: webhook-cert-create
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ template "neo-helm-chart.name" . }}
    helm.sh/chart: {{ template "neo-helm-chart.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/version: {{ .Chart.Version }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "6"
spec:
  template:
    spec:
      serviceAccountName: webhook-cert-sa
      containers:
        - name: webhook-cert-setup
          image: docker.io/jettech/kube-webhook-certgen:v1.5.1
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          args:
            - create
            - --host=neo-agent,neo-agent.$(POD_NAMESPACE),neo-agent.$(POD_NAMESPACE).svc
            - --namespace=$(POD_NAMESPACE)
            - --secret-name=neo-certs
      restartPolicy: OnFailure
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
  backoffLimit: 0

---
apiVersion: batch/v1
kind: Job
metadata:
  name: webhook-cert-patch
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ template "neo-helm-chart.name" . }}
    helm.sh/chart: {{ template "neo-helm-chart.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/version: {{ .Chart.Version }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "7"
spec:
  template:
    spec:
      serviceAccountName: webhook-cert-sa
      containers:
        - name: webhook-cert-setup
          image: docker.io/jettech/kube-webhook-certgen:v1.5.1
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          args:
            - patch
            - --webhook-name=neo
            - --namespace=$(POD_NAMESPACE)
            - --patch-mutating=true
            - --patch-validating=false
            - --secret-name=neo-certs
            - --patch-failure-policy=Ignore
      restartPolicy: OnFailure
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
  backoffLimit: 10
