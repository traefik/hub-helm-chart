---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hub-agent-controller
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "hub-helm-chart.labels" . | nindent 4 }}
    app.kubernetes.io/component: controller
  {{- with .Values.controllerDeployment.labels }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
  annotations:
  {{- with .Values.controllerDeployment.annotations }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hub-agent
      component: controller
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: hub-agent
        component: controller
      {{- with .Values.controllerDeployment.podLabels }}
      {{- toYaml . | nindent 8 }}
      {{- end }}
      annotations:
      {{- with .Values.controllerDeployment.podAnnotations }}
      {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: hub-agent-controller
      automountServiceAccountToken: true
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: hub-agent-controller
          image: {{ template "hub-helm-chart.image-name" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - controller
            {{ if .Values.tokenSecretRef -}}
            - --token=$(HUB_SECRET_TOKEN)
            {{ else -}}
            - --token={{ required "A valid .Values.token or .Values.tokenSecretRef is required." .Values.token }}
            {{ end -}}
            - --acp-server.listen-addr=:8443
            - --acp-server.cert=/var/run/hub-agent-kubernetes/cert.pem
            - --acp-server.key=/var/run/hub-agent-kubernetes/key.pem
            - --acp-server.auth-server-addr=http://hub-agent-auth-server.{{ .Release.Namespace }}.svc.cluster.local
            {{ if .Values.controllerDeployment.traefik -}}
            {{ if .Values.controllerDeployment.traefik.metricsURL -}}
            - --traefik.metrics-url={{ .Values.controllerDeployment.traefik.metricsURL }}
            {{ end -}}
            {{ end -}}
          {{- with .Values.controllerDeployment.args -}}
          {{ range . }}
            - {{ . | quote }}
          {{- end }}
          {{- end }}
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            {{- range .Values.controllerDeployment.env }}
            - name: {{ .name }}
              value: {{ .value }}
            {{- end }}
            {{- if .Values.tokenSecretRef }}
            - name: HUB_SECRET_TOKEN
              valueFrom:
                secretKeyRef:
                  {{- with .Values.tokenSecretRef }}
                  {{- toYaml . | nindent 18 }}
                  {{- end -}}
            {{- end }}
          resources:
            {{- with .Values.resources }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65532
            runAsGroup: 65532
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - mountPath: /var/run/hub-agent-kubernetes/
              name: hub-certs
      volumes:
        - name: hub-certs
          secret:
            secretName: hub-agent-certs
            items:
              - key: cert
                path: cert.pem
              - key: key
                path: key.pem
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
