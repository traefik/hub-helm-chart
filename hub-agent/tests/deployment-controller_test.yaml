suite: Hub deployment
templates:
  - deployment-controller.yaml
tests:
  - it: should have 1 replicas
    set:
      token: "test"
    asserts:
      - equal:
          path: spec.replicas
          value: 1
  - it: should have annotations and/or  podsAnnotations when specified
    set:
      token: "test"
      controllerDeployment:
        annotations:
          hub/plop: annotations
        podAnnotations:
          hub/plop: podAnnotations
    asserts:
      - equal:
          path: metadata.annotations.hub/plop
          value: annotations
      - equal:
          path: spec.template.metadata.annotations.hub/plop
          value: podAnnotations
  - it: should have specific label when specified
    set:
      token: "test"
      controllerDeployment:
        podLabels:
          custom-label: plop
    asserts:
      - equal:
          path: spec.template.metadata.labels.custom-label
          value: plop
  - it: should add additional env vars to controller when specified
    set:
      token: "test"
      controllerDeployment:
        env:
          - name: "TEST_ENV_VAR"
            value: "testvalue"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: TEST_ENV_VAR
            value: testvalue
  - it: should set token env var when secretRef set
    set:
      tokenSecretRef:
        name: hub-token
        key: token
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: HUB_SECRET_TOKEN
            valueFrom:
              secretKeyRef:
                name: hub-token
                key: token
  - it: should set args when secretRef set
    set:
      tokenSecretRef:
        name: hub-token
        key: token
    asserts:
      - contains:
          path: spec.template.spec.containers[0].args
          content: --token=$(HUB_SECRET_TOKEN)
  - it: should set token when set
    set:
      token: "test"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].args
          content: --token=test
  - it: should ignore token when secretRef set
    set:
      token: "test"
      tokenSecretRef:
        name: hub-token
        key: token
    asserts:
      - contains:
          path: spec.template.spec.containers[0].args
          content: --token=$(HUB_SECRET_TOKEN)
  - it: should set args for controller
    set:
      token: test
      controllerDeployment:
        args:
          - --log-level=debug
          - --platform-url=https://hub.traefik.io/agent
    asserts:
      - contains:
          path: spec.template.spec.containers[0].args
          content: --log-level=debug
      - contains:
          path: spec.template.spec.containers[0].args
          content: --platform-url=https://hub.traefik.io/agent
  - it: should have metrics url defaults
    set:
      token: test
    asserts:
      - contains:
          path: spec.template.spec.containers[0].args
          content: --traefik.metrics-url=http://traefik-hub.$(POD_NAMESPACE).svc.cluster.local:9100/metrics
  - it: should set metrics url
    set:
      token: test
      controllerDeployment:
        traefik:
          metricsURL: http://my-service/metrics
    asserts:
      - contains:
          path: spec.template.spec.containers[0].args
          content: --traefik.metrics-url=http://my-service/metrics

  - it: should not set metrics url
    set:
      token: test
      controllerDeployment:
        traefik:
          metricsURL: ""
    asserts:
      - notContains:
          path: spec.template.spec.containers[0].args
          content: --traefik.metrics-url